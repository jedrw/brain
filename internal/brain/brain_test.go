package brain

import (
	"os"
	"reflect"
	"testing"
)

func TestFromFile(t *testing.T) {
	expected := Node{
		Title: "Test",
		Raw:   []byte{45, 45, 45, 10, 116, 105, 116, 108, 101, 58, 32, 84, 101, 115, 116, 10, 45, 45, 45, 10, 10, 35, 32, 65, 32, 118, 101, 114, 121, 32, 110, 105, 99, 101, 32, 104, 101, 97, 100, 105, 110, 103, 10, 10, 65, 32, 108, 105, 115, 116, 58, 10, 10, 45, 32, 49, 10, 45, 32, 50, 10, 45, 32, 51, 10, 10, 76, 111, 114, 101, 109, 32, 105, 112, 115, 117, 109, 32, 100, 111, 108, 111, 114, 32, 115, 105, 116, 32, 97, 109, 101, 116, 44, 32, 99, 111, 110, 115, 101, 99, 116, 101, 116, 117, 114, 32, 97, 100, 105, 112, 105, 115, 99, 105, 110, 103, 32, 101, 108, 105, 116, 44, 32, 115, 101, 100, 32, 100, 111, 32, 101, 105, 117, 115, 109, 111, 100, 32, 116, 101, 109, 112, 111, 114, 32, 105, 110, 99, 105, 100, 105, 100, 117, 110, 116, 32, 117, 116, 32, 108, 97, 98, 111, 114, 101, 32, 101, 116, 32, 100, 111, 108, 111, 114, 101, 32, 109, 97, 103, 110, 97, 32, 97, 108, 105, 113, 117, 97, 46, 32, 85, 116, 32, 101, 110, 105, 109, 32, 97, 100, 32, 109, 105, 110, 105, 109, 32, 118, 101, 110, 105, 97, 109, 44, 32, 113, 117, 105, 115, 32, 110, 111, 115, 116, 114, 117, 100, 32, 101, 120, 101, 114, 99, 105, 116, 97, 116, 105, 111, 110, 32, 117, 108, 108, 97, 109, 99, 111, 32, 108, 97, 98, 111, 114, 105, 115, 32, 110, 105, 115, 105, 32, 117, 116, 32, 97, 108, 105, 113, 117, 105, 112, 32, 101, 120, 32, 101, 97, 32, 99, 111, 109, 109, 111, 100, 111, 32, 99, 111, 110, 115, 101, 113, 117, 97, 116, 46, 32, 68, 117, 105, 115, 32, 97, 117, 116, 101, 32, 105, 114, 117, 114, 101, 32, 100, 111, 108, 111, 114, 32, 105, 110, 32, 114, 101, 112, 114, 101, 104, 101, 110, 100, 101, 114, 105, 116, 32, 105, 110, 32, 118, 111, 108, 117, 112, 116, 97, 116, 101, 32, 118, 101, 108, 105, 116, 32, 101, 115, 115, 101, 32, 99, 105, 108, 108, 117, 109, 32, 100, 111, 108, 111, 114, 101, 32, 101, 117, 32, 102, 117, 103, 105, 97, 116, 32, 110, 117, 108, 108, 97, 32, 112, 97, 114, 105, 97, 116, 117, 114, 46, 32, 69, 120, 99, 101, 112, 116, 101, 117, 114, 32, 115, 105, 110, 116, 32, 111, 99, 99, 97, 101, 99, 97, 116, 32, 99, 117, 112, 105, 100, 97, 116, 97, 116, 32, 110, 111, 110, 32, 112, 114, 111, 105, 100, 101, 110, 116, 44, 32, 115, 117, 110, 116, 32, 105, 110, 32, 99, 117, 108, 112, 97, 32, 113, 117, 105, 32, 111, 102, 102, 105, 99, 105, 97, 32, 100, 101, 115, 101, 114, 117, 110, 116, 32, 109, 111, 108, 108, 105, 116, 32, 97, 110, 105, 109, 32, 105, 100, 32, 101, 115, 116, 32, 108, 97, 98, 111, 114, 117, 109, 46, 10, 10, 96, 96, 96, 103, 111, 10, 116, 104, 105, 110, 103, 44, 32, 101, 114, 114, 32, 58, 61, 32, 116, 104, 105, 110, 103, 115, 46, 78, 101, 119, 40, 41, 10, 105, 102, 32, 101, 114, 114, 32, 33, 61, 32, 110, 105, 108, 32, 123, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 101, 114, 114, 10, 125, 10, 96, 96, 96, 10},
		Content: []byte{
			60, 104, 49, 62, 65, 32, 118, 101, 114, 121, 32, 110, 105, 99, 101, 32, 104, 101, 97, 100, 105, 110, 103, 60, 47, 104, 49, 62, 10, 60, 112, 62, 65, 32, 108, 105, 115, 116, 58, 60, 47, 112, 62, 10, 60, 117, 108, 62, 10, 60, 108, 105, 62, 49, 60, 47, 108, 105, 62, 10, 60, 108, 105, 62, 50, 60, 47, 108, 105, 62, 10, 60, 108, 105, 62, 51, 60, 47, 108, 105, 62, 10, 60, 47, 117, 108, 62, 10, 60, 112, 62, 76, 111, 114, 101, 109, 32, 105, 112, 115, 117, 109, 32, 100, 111, 108, 111, 114, 32, 115, 105, 116, 32, 97, 109, 101, 116, 44, 32, 99, 111, 110, 115, 101, 99, 116, 101, 116, 117, 114, 32, 97, 100, 105, 112, 105, 115, 99, 105, 110, 103, 32, 101, 108, 105, 116, 44, 32, 115, 101, 100, 32, 100, 111, 32, 101, 105, 117, 115, 109, 111, 100, 32, 116, 101, 109, 112, 111, 114, 32, 105, 110, 99, 105, 100, 105, 100, 117, 110, 116, 32, 117, 116, 32, 108, 97, 98, 111, 114, 101, 32, 101, 116, 32, 100, 111, 108, 111, 114, 101, 32, 109, 97, 103, 110, 97, 32, 97, 108, 105, 113, 117, 97, 46, 32, 85, 116, 32, 101, 110, 105, 109, 32, 97, 100, 32, 109, 105, 110, 105, 109, 32, 118, 101, 110, 105, 97, 109, 44, 32, 113, 117, 105, 115, 32, 110, 111, 115, 116, 114, 117, 100, 32, 101, 120, 101, 114, 99, 105, 116, 97, 116, 105, 111, 110, 32, 117, 108, 108, 97, 109, 99, 111, 32, 108, 97, 98, 111, 114, 105, 115, 32, 110, 105, 115, 105, 32, 117, 116, 32, 97, 108, 105, 113, 117, 105, 112, 32, 101, 120, 32, 101, 97, 32, 99, 111, 109, 109, 111, 100, 111, 32, 99, 111, 110, 115, 101, 113, 117, 97, 116, 46, 32, 68, 117, 105, 115, 32, 97, 117, 116, 101, 32, 105, 114, 117, 114, 101, 32, 100, 111, 108, 111, 114, 32, 105, 110, 32, 114, 101, 112, 114, 101, 104, 101, 110, 100, 101, 114, 105, 116, 32, 105, 110, 32, 118, 111, 108, 117, 112, 116, 97, 116, 101, 32, 118, 101, 108, 105, 116, 32, 101, 115, 115, 101, 32, 99, 105, 108, 108, 117, 109, 32, 100, 111, 108, 111, 114, 101, 32, 101, 117, 32, 102, 117, 103, 105, 97, 116, 32, 110, 117, 108, 108, 97, 32, 112, 97, 114, 105, 97, 116, 117, 114, 46, 32, 69, 120, 99, 101, 112, 116, 101, 117, 114, 32, 115, 105, 110, 116, 32, 111, 99, 99, 97, 101, 99, 97, 116, 32, 99, 117, 112, 105, 100, 97, 116, 97, 116, 32, 110, 111, 110, 32, 112, 114, 111, 105, 100, 101, 110, 116, 44, 32, 115, 117, 110, 116, 32, 105, 110, 32, 99, 117, 108, 112, 97, 32, 113, 117, 105, 32, 111, 102, 102, 105, 99, 105, 97, 32, 100, 101, 115, 101, 114, 117, 110, 116, 32, 109, 111, 108, 108, 105, 116, 32, 97, 110, 105, 109, 32, 105, 100, 32, 101, 115, 116, 32, 108, 97, 98, 111, 114, 117, 109, 46, 60, 47, 112, 62, 10, 60, 112, 114, 101, 62, 60, 99, 111, 100, 101, 32, 99, 108, 97, 115, 115, 61, 34, 108, 97, 110, 103, 117, 97, 103, 101, 45, 103, 111, 34, 62, 116, 104, 105, 110, 103, 44, 32, 101, 114, 114, 32, 58, 61, 32, 116, 104, 105, 110, 103, 115, 46, 78, 101, 119, 40, 41, 10, 105, 102, 32, 101, 114, 114, 32, 33, 61, 32, 110, 105, 108, 32, 123, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 101, 114, 114, 10, 125, 10, 60, 47, 99, 111, 100, 101, 62, 60, 47, 112, 114, 101, 62, 10,
		},
	}

	fileBytes, err := os.ReadFile("../../example-docs/test.md")
	if err != nil {
		t.Error(err)
	}

	node, err := NewNodeFromBytes(fileBytes)
	if err != nil {
		t.Error(err)
	}

	if !reflect.DeepEqual(expected, node) {
		t.Errorf("expected\n%+v\n got:\n%+v", expected, node)
	}
}
