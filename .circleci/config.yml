version: 2.1

orbs:
  kubernetes: circleci/kubernetes@1.3.1

commands:
  setup_helm:
    steps:
      - run: curl -fsSL -o /tmp/get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      - run: chmod 700 /tmp/get_helm.sh
      - run: /tmp/get_helm.sh
  login_to_ghcr:
    steps:
      - run:
          name: Login to ghcr
          command: echo $GITHUB_TOKEN | docker login ghcr.io -u $CIRCLE_PROJECT_USERNAME --password-stdin
  generate_version:
    steps:
      - run:
          name: Generate version
          command: |
            if [ "$CIRCLE_BRANCH" = "develop" ]; then 
              VERSION="0.0.0-beta-$CIRCLE_SHA1"
            else
              VERSION="${CIRCLE_SHA1}"
            fi

            echo $VERSION
            echo "export VERSION=$VERSION" >> "$BASH_ENV"
jobs:
  test:
    docker:
      - image: cimg/go:1.25
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
            - go-mod-v1
      - run:
          name: Install Dependencies
          command: go get ./...
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Run tests
          command: go test ./...
  build_image:
    docker:
      - image: cimg/base:current
    parameters:
      push:
        type: boolean
        default: false
    steps:
      - setup_remote_docker
      - checkout
      - login_to_ghcr
      - generate_version
      - run:
          name: Build image
          command: docker build -t ghcr.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:$VERSION .
      - when:
          condition: << parameters.push >>
          steps:
            - run:
                name: Push image
                command: docker push ghcr.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:$VERSION

  deploy:
    docker:
      - image: cimg/node:lts
    resource_class: lupinelab/tk3s
    working_directory: ~/project/deploy
    steps:
      - checkout:
          path: ~/project
      - kubernetes/install-kubeconfig
      - run:
          name: Install pulumi
          command: |
            curl -fsSL https://get.pulumi.com -o install_pulumi.sh
            chmod +x install_pulumi.sh
            sudo ./install_pulumi.sh --install-root /usr/local
            rm install_pulumi.sh
      - run:
          name: Install kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            rm kubectl
      - run:
          name: npmrc
          command: |
            cat \<<EOF > .npmrc
            //npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}
            @jedrw:registry=https://npm.pkg.github.com
            always-auth=true
            EOF
      - run:
          name: Install dependencies
          command: npm ci
      - run:
          name: Deploy
          command: |
            if [[ $CIRCLE_BRANCH == "main" ]]; then
              STACK=production
            else
              echo "Stack does not exist for branch"
              exit 1
            fi
            pulumi up --stack $STACK --yes

workflows:
  test:
    jobs:
      - test:
          filters:
            branches:
              ignore: main
      - build_image:
          context:
            - github
          filters:
            branches:
              ignore: main
  build_and_deploy:
    jobs:
      - test:
          filters:
            branches:
              only: main
      - build_image:
          push: true
          context:
            - github
          requires:
            - test
          filters:
            branches:
              only: main
      - deploy:
          context:
            - github
            - tk3s
            - pulumi
          requires:
            - build_image
          filters:
            branches:
              only: main
